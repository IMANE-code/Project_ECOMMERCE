{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youcode\\\\memory1\\\\src\\\\Categorie.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Categorie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      catégorie: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        catégorie: result.catégorie\n      });\n    }, // Remarque : il est important de traiter les erreurs ici\n    // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\n    // des exceptions provenant de réels bugs du composant.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      catégorie\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Erreur : \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Chargement\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \", item.price]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport default Categorie;","map":{"version":3,"sources":["C:/Users/Youcode/memory1/src/Categorie.js"],"names":["React","Component","Categorie","constructor","props","state","error","isLoaded","catégorie","componentDidMount","fetch","then","res","json","result","setState","render","message","items","map","item","name","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACC,SAA9B,CAAwC;AACpCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,SAAS,EAAEM,MAAM,CAACN;AAFN,OAAd;AAID,KARL,EASI;AACA;AACA;AACCF,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAAiC,KAAKH,KAA5C;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,gCAAeA,KAAK,CAACW,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA,kBACGW,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb;AAAA,qBACGA,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB;AAAA,WAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AASD;AACF;;AAjDmC;;AAoDtC,eAAenB,SAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nclass Categorie extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        catégorie: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch(\"http://localhost:5000\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              catégorie: result.catégorie\r\n            });\r\n          },\r\n          // Remarque : il est important de traiter les erreurs ici\r\n          // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\r\n          // des exceptions provenant de réels bugs du composant.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, catégorie } = this.state;\r\n      if (error) {\r\n        return <div>Erreur : {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Chargement…</div>;\r\n      } else {\r\n        return (\r\n          <ul>\r\n            {items.map(item => (\r\n              <li key={item.name}>\r\n                {item.name} {item.price}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  export default Categorie"]},"metadata":{},"sourceType":"module"}